{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","onSubmit","event","preventDefault","htmlFor","value","onChange","target","type","id","placeholder","classNames","onClick","then","newMovie","Response","App","setMovies","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCbRC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACCC,MAAM,GAAD,OAHb,+CAGa,OAAeF,IADrB,WAChBG,EADgB,QAGRC,GAHQ,sBAId,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAJ7B,gCAOfJ,EAASK,QAPM,2CAAH,sDCQRC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAA0BD,mBAAuB,MAAjD,mBAAOvB,EAAP,KAAcyB,EAAd,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAgCA,OACE,qCACE,uBACEC,SApBuC,SAACC,GAC5CA,EAAMC,iBAEF9B,IACFsB,EAAStB,GACTwB,EAAS,IACTC,EAAS,QAePxB,UAAU,aAFZ,UAIE,sBAAKA,UAAU,QAAf,UAEE,uBAAOA,UAAU,QAAQ8B,QAAQ,cAAjC,yBAIA,qBAAK9B,UAAU,UAAf,SACE,uBACE+B,MAAOpB,EACPqB,SAtBc,SAACJ,GACzB,IAAQG,EAAUH,EAAMK,OAAhBF,MAERL,GAAS,GACTH,EAASQ,IAmBCG,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpC,UAAWqC,IAAW,QAAS,CAC7B,YAAaZ,QAIlBA,GAEC,mBAAGzB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEkC,KAAK,SACLlC,UAAU,kBACVsC,QAnEM,WAChB5B,EAASC,GACN4B,MAAK,SAAAC,GACsB,UAAtBA,EAASC,UACXjB,EAAS,MACTE,GAAS,KAETF,EAASgB,GACTd,GAAS,QAwDP,4BASF,qBAAK1B,UAAU,UAAf,SACE,wBACEkC,KAAK,SACLlC,UAAU,oBAFZ,qCASN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACED,GAAS,cAAC,EAAD,CAAWA,MAAOA,WC/FxB2C,EAAM,WACjB,MAA4BpB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAeoC,EAAf,KAUA,OACE,sBAAK3C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWqB,SAdA,SAACtB,GACOQ,EAAOqC,MAAK,gBAAGnC,EAAH,EAAGA,OAAH,OAAgBV,EAAMU,SAAWA,MAGlEkC,GAAU,SAAAE,GAAU,4BAAQA,GAAR,CAAoB9C,gBCR9C+C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.be50f0c7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=2e742e04&t=';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${BASE_URL}${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n\n  const findMovie = () => {\n    getMovie(title)\n      .then(newMovie => {\n        if (newMovie.Response === 'False') {\n          setMovie(null);\n          setError(true);\n        } else {\n          setMovie(newMovie);\n          setError(false);\n        }\n      });\n  };\n\n  const handleSubmit: React.FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (movie) {\n      addMovie(movie);\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setError(false);\n    setTitle(value);\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={handleInputChange}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n            />\n          </div>\n          {error\n          && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        { movie && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie): void => {\n    const includesInList = movies.some(({ imdbID }) => movie.imdbID === imdbID);\n\n    if (!includesInList) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}